{
  "swagger": "2.0",
  "info": {
    "description": "***Rainbow Square***",
    "version": "1.0.0",
    "title": "Rainbow Square backend API"
  },
  "host": "rainbow-square-backend.herokuapp.com",
  "basePath": "/api",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "session",
      "description": "Operations about session"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "Register new user",
        "parameters": [
          {
            "name": "body",
            "description": "RegistrationRequest object containing user login, password and email",
            "schema": {
              "$ref": "#/definitions/RegistrationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Empty parameter"
          },
          "409": {
            "description": "User is already registered"
          }
        }
      }
    },
    "/user/top": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Get top users",
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of users returned",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TopResponse"
            }
          }
        }
      }
    },
    "/session": {
      "get": {
        "tags": [
          "session"
        ],
        "description": "User authorization by session",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "401": {
            "description": "Session unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "session"
        ],
        "description": "User authorization by login and password",
        "parameters": [
          {
            "name": "body",
            "description": "AuthRequest object containing user login and password",
            "schema": {
              "$ref": "#/definitions/AuthRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "400": {
            "description": "Empty parameter"
          },
          "401": {
            "description": "Invalid username/password"
          }
        }
      },
      "delete": {
        "tags": [
          "session"
        ],
        "description": "User logout",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "401": {
            "description": "Session unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "RegistrationRequest": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "AuthRequest": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "SuccessResponse": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        }
      }
    },
    "TopResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LoginAndRank"
      }
    },
    "LoginAndRank": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "rank": {
          "type": "integer"
        }
      }
    }
  }
}